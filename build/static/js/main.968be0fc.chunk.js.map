{"version":3,"sources":["Component/Home.js","Component/eligibility.js","Component/compability.js","Component/Bloodfacts.js","Component/donarregister.js","Component/searchdonar.js","Component/Header.js","Component/Footer.js","Component/change.js","Component/Nav.js","Component/Post.js","Component/donarlist.js","Component/donarfilter.js","Component/donarapi.js","Component/postregisterlist.js","Component/postregisterlistapi.js","Component/delete.js","Component/Routing.js","index.js"],"names":["Home","id","src","alt","class","to","className","width","height","frameborder","allow","allowfullscreen","Eligibility","Fragment","Comp","colspan","Blood","type","Register","props","handlesubmit","currentYear","Date","getFullYear","DOB","state","split","Year","Number","name","bloodgroup","weight","area","mobileno","selectquestion","answer","alert","length","console","log","fetch","method","headers","body","JSON","stringify","then","history","push","handlechange","event","setState","target","value","gender","this","autoComplete","required","placeholder","onChange","selected","onClick","React","Component","Searchdonar","rendergroup","data","map","item","Blood_Group","handlesearch","res","json","donar","smile","bloodtype","disabled","Header","Activedonar","donars","Footer","Change","mode","document","classList","toggle","getElementById","Navbar","data-toggle","data-target","Postdisply","units","reason","requirementbefore","hospitalname","patientname","patientage","handlereset","Donarlist","Listing","_id","colSpan","Booking","url","Donarfilter","Groupfilter","grpUrl","axios","get","response","Filterdonars","Donarapi","setDataPerFilter","sortedData","list","Postrequire","dateObj","currentDate","getDate","currentMonth","getMonth","beforeDate","beforeYear","beforeMonth","Requireapi","Requirementlist","Deldonar","handledonar","handleclick","match","params","question","Routing","exact","path","component","Reactdom","render"],"mappings":"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","file":"static/js/main.968be0fc.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './home.css'\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                 <img id=\"image\" src=\"./image/smm.jpeg\" alt=\"icon\"/> \r\n                 {/* <p  id=\"piccadd\"> Donate blood and be the reason of smile to many faces </p>  */}\r\n            </div>\r\n            \r\n            <div class=\"container\" >\r\n               <Link to=\"/Home/post\" ><h1 className=\"postheading\"> POST YOUR REQUIREMENT </h1> </Link> \r\n                <div class=\"panel panel-info\">\r\n                    <div class=\"panel-heading\">Benefits</div>\r\n                    <div class=\"panel-body\">\r\n                        <ul>\r\n                            <li className=\"liedit\" >Donating blood may reduce the risk of heart disease for men and stimulate the generation of red blood cells.</li>\r\n                            <li className=\"liedit\">The amount of toxic chemicals (e.g. mercury, pesticides, fire retardants) circulating in the blood stream is reduced by the amount contained in given blood.</li>\r\n                            <li className=\"liedit\">The good news is you can give blood again and again to help save more lives!</li>\r\n                            <li className=\"liedit\">If you're a regular blood donor, you can give blood once in 12 weeks.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div class=\"panel panel-info\">\r\n                    <div class=\"panel-heading\">World Blood Donors Day</div>\r\n                    <div class=\"panel-body\">\r\n                        <p class=\"textedit\" >Following the success of the World Health Day 2000 with the theme 'Blood Saves Lives', 14th June is observed as the World Blood Donors Day. The date coincides with the birth date of Karl Landsteiner, who discovered the ABO blood group system.</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"jumbotron\">\r\n                    <p>Every 2 Seconds, someone in the country is in need of blood\r\n                    </p>\r\n                    <p> Every year our nation requires about 4 Crore units of blood </p>\r\n                    <p> Out of which only a meager 5 Lakh units of blood are available\r\n                    </p>\r\n                </div>\r\n                <iframe width=\"100%\" height=\"500\" id=\"vediodesign\" src=\"https://www.youtube.com/embed/-1O4jlEhsxU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n            </div>   \r\n           \r\n            {/* <iframe height=\"400\" width=\"400\" src=\"https://www.youtube.com/watch?v=-1O4jlEhsxU\" ></iframe>          */}\r\n        </div>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Home ;","import React from 'react'\r\nimport './eligibility.css'\r\nconst Eligibility = () => {\r\n    return (\r\n        <React.Fragment>\r\n                <h2 id=\"heading\"> Blood Donors Eligibility </h2>\r\n                <div class=\"container\">\r\n                    <p id=\"head2\"> You should not be suffering from any of the following diseases or taking medicines for them</p>\r\n                    <ul>\r\n                        <li> Hepatitis B,C </li>\r\n                        <li>AIDS # Diabetes (are you under medication currently?) </li>\r\n                        <li> Fits/ Convulsions (are you under medication currently?)</li>\r\n                        <li> Cancer # Leprosy or any other infectious diseases</li>\r\n                        <li> Any allergies (Only if you are suffering from severe symptoms)</li>\r\n                        <li> Hemophilia/ Bleeding problems</li>\r\n                        <li> Kidney disease </li>\r\n                        <li> Heart disease</li>\r\n                        <li>Hormonal disorders</li>\r\n                        <li>Any other type of Jaundice (within 5 years)</li>\r\n                        <li>Chicken Pox (within 1 year)</li>\r\n                        <li>Tuberculosis (within 2 years)</li>\r\n                        <li>Malaria (within 1 year)</li>\r\n                        <li> Organ Transplant (within one year)</li>\r\n                        <li>Blood Transfusion (within the last 6 months)</li>\r\n                        <li>Pregnancy (within the last 6 months)</li>\r\n                        <li>Blood Donation (within the last 3 months)</li>\r\n                        <li> Major Surgery (within the last 3 months)</li>\r\n                        <li>Hemoglobin deficiency / Anemia (recently)</li>\r\n                        <li>Drastic weight loss (recently)</li>\r\n                    </ul>\r\n                    <iframe width=\"50%\" height=\"315\" id=\"eligibityvedio\" src=\"https://www.youtube.com/embed/SN9NH7mUbls\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Eligibility ;","import React from 'react'\r\nimport './compability.css'\r\nconst Comp = () => {\r\n    return (\r\n        <React.Fragment>   \r\n              <div class=\"container\" >\r\n              <img id=\"image\" src=\"./image/list.gif\" alt=\"icon\"/>\r\n              <h2 className=\"tableheading\" > Red Blood cell compatibility Table </h2>\r\n                    <table class=\"table\" id=\"firsttable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    Recipient blood type\r\n                                </th>\r\n                                <th colspan=\"8\">\r\n                                    Donor red blood cells must be:\r\n                                </th>\r\n                            </tr>\r\n                           \r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    O+\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    O+\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                            </tr>      \r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    A-\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    A-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                            </tr>      \r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    A+\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    O+\r\n                                </td>\r\n                                <td>\r\n                                    A-\r\n                                </td>\r\n                                <td>\r\n                                    A+\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                \r\n                            </tr>    \r\n                            <tr>\r\n                                <td class=\"edittable\"> \r\n                                    B-\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                   - \r\n                                </td>\r\n                                <td>\r\n                                   - \r\n                                </td>\r\n                                <td>\r\n                                    B-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                            </tr> \r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    B+\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    O+\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                   - \r\n                                </td>\r\n                                <td>\r\n                                    B-\r\n                                </td>\r\n                                <td>\r\n                                    B+\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                            </tr>    \r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    AB-\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    A-\r\n                                </td>\r\n                                <td>\r\n                                    -\r\n                                </td>\r\n                                <td>\r\n                                    B-\r\n                                </td>\r\n                                <td>\r\n                                   - \r\n                                </td>\r\n                                <td>\r\n                                    AB-\r\n                                </td>\r\n                                <td>\r\n                                    - \r\n                                 </td>\r\n                            </tr>   \r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    AB+\r\n                                </td>\r\n                                <td>\r\n                                    O-\r\n                                </td>\r\n                                <td>\r\n                                    O+\r\n                                </td>\r\n                                <td>\r\n                                    A-\r\n                                </td>\r\n                                <td>\r\n                                    A+\r\n                                </td>\r\n                                <td>\r\n                                    B-\r\n                                </td>\r\n                                <td>\r\n                                    B+\r\n                                </td>\r\n                                <td>\r\n                                    AB-\r\n                                </td>\r\n                                <td>\r\n                                    AB+\r\n                                </td>\r\n                            </tr>       \r\n                        </tbody>\r\n                    </table>\r\n              <h4 className=\"tableheading2\" > Plasma compatibility Table </h4>\r\n                    <table class=\"table\" id=\"secondtable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>\r\n                                    Recipient blood type\r\n                                </th>\r\n                                <th>\r\n                                    Donor plasma must be:\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    AB\r\n                                </td>\r\n                                <td>\r\n                                    AB\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    A\r\n                                </td>\r\n                                <td>\r\n                                    A or AB\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    B\r\n                                </td>\r\n                                <td>\r\n                                    B or AB\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td class=\"edittable\">\r\n                                    O\r\n                                </td>\r\n                                <td>\r\n                                    O, A, B or AB\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <iframe width=\"70%\" height=\"400\" id=\"groupimage\" src=\"https://www.youtube.com/embed/M5ADyLmmoIc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n              </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Comp ;\r\n","import React from 'react'\r\nimport './bloodfacts.css'\r\nconst Blood = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2 id=\"heading\"> Blood Facts in General </h2> \r\n            <div class=\"container\">\r\n            <ul type=\"circle\">\r\n                <li id=\"first\"> There is no substitute for human Blood</li>\r\n                <li>Blood makes up about 7% of your body's weight.</li>\r\n                <li>An average adult has about 14 to 18 pints of Blood</li>\r\n                <li>One standard unit or pint of Blood equals about two cups.</li>\r\n                <li>Blood carries oxygen and nutrients to all of the body.</li>\r\n                <li>Blood carries carbon dioxide and other waste products back to the lungs, kidneys and liver for disposal.</li>\r\n                <li>Blood fights against infection and helps heal wounds.</li>\r\n                <li>One unit of donated whole Blood is separated into components before use (red Blood cells, white Blood cells, plasma, platelets, etc.)</li>\r\n                <li>There are four main Blood types: A, B, AB and O.</li>\r\n                <li>Each Blood type is either Rh positive or negative.</li>\r\n                <li>There are about one billion red Blood cells in a few drops of whole Blood.</li>\r\n                <li>Red Blood cells live about 120 days in our bodies.</li>\r\n                <li>Red Blood cells can be stored under normal conditions for up to 42 days.</li>\r\n                <li>Frozen red Blood cells can be stored for ten years, and more.</li>\r\n                <li>Platelets must be used within five days.</li>\r\n                <li>Platelets are small Blood cells that assist in the process of Blood clotting helping those with leukemia and other cancers, controlling bleeding.</li>\r\n                <li>Plasma, the fourth major component of Blood, is a sticky, pale yellow fluid mixture of water, protein and salts. It is 95% water. The other 5% is made up of nutrients, proteins and hormones.</li>\r\n                <li>Blood Plasma constitutes 55% of the volume of human Blood.</li>\r\n                <li>Plasma helps maintain Blood pressure, carries Blood cells, nutrients, enzymes and hormones, and supplies critical proteins for Blood clotting and immunity.</li>\r\n                <li>Type AB plasma has been considered as the universal Blood plasma type, and therefore AB plasma is given to patients with any Blood type</li>\r\n                <li>Frozen Plasma can be stored for up to one year.</li>\r\n                <li>Human Blood; red Blood cells, white Blood cells, plasma and platelets are made naturally by the body in the bone marrow.</li>\r\n            </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default  Blood  ;","import React from 'react'\r\nimport './donarregister.css'\r\nconst url = \"https://blood-donr.herokuapp.com/registration\"\r\n\r\nclass Register extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n            this.state = {\r\n                name :'',\r\n                gender:'',\r\n                DOB:'',\r\n                bloodgroup:'',\r\n                weight:'',\r\n                area:'',\r\n                mobileno:'',\r\n                selectquestion:'',\r\n                answer:''\r\n            }\r\n    } \r\n    handlesubmit=() => {\r\n        var dateObj = new Date();\r\n        var currentYear = dateObj.getFullYear();\r\n        var DOB = this.state.DOB.split('-') \r\n        var Year = Number(DOB[0]) \r\n        if(this.state.name==''||this.state.DOB ==''||this.state.bloodgroup ==''||this.state.weight ==''||this.state.area ==''||this.state.mobileno ==''||this.state.selectquestion ==''||this.state. answer ==''){\r\n            alert(\"All filds are required\")\r\n        } \r\n        else if(currentYear-Year<18){\r\n            alert(\"You are not eligibile for blood donate you should be 18 year\")\r\n        } \r\n         else{\r\n            if(this.state.mobileno.length==10){ \r\n                console.log(this.state)\r\n                fetch( url,\r\n                    {\r\n                        method:'POST',\r\n                        headers:{\r\n                            'Accept':'application/json',\r\n                            'Content-Type':'application/json'\r\n                        },\r\n                        body:JSON.stringify(this.state)\r\n                    })\r\n                    .then(this.props.history.push('/bookinglist'))\r\n                 }\r\n                 else{\r\n                     alert(\"Enter right phone no\")\r\n                 }\r\n            }\r\n    }\r\n\r\n    handlechange=(event) =>{\r\n        this.setState({[event.target.name]:event.target.value})\r\n    } \r\n    render(){\r\n        return (\r\n            <div class=\"container\"  id=\"form\">\r\n               <h2> <center>DONAR REGISTER  </center> </h2>\r\n                 <div class=\"form-group\">\r\n                     <label> Name </label>\r\n                     <input type=\"text\" name=\"name\" value={this.state.name} autoComplete=\"off\" required placeholder=\"Enter Name\"  \r\n                     class=\"form-control\" onChange={ this.handlechange}/>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                     <label  > Gender \r\n                     <input type=\"radio\" value={this.state.gender}  name=\"gender\"  onChange={ this.handlechange} /> Male\r\n                     <input type=\"radio\" value={this.state.gender}  name=\"gender\" onChange={ this.handlechange} /> Female\r\n                 </label>\r\n                 </div> \r\n                 <div class=\"form-group\">\r\n                     <label> Date Of Birth </label>\r\n                     <input type=\"date\" name=\"DOB\" value={this.state.DOB} autoComplete=\"off\" required  class=\"form-control\" onChange={ this.handlechange} />\r\n                 </div> \r\n                 <div class=\"form-group\">\r\n                     <label> Blood Group </label>\r\n                     <select class=\"form-control\" name=\"bloodgroup\" value={this.state.bloodgroup} autoComplete=\"off\" required  onChange={ this.handlechange} >\r\n                         <option  selected > select blood group </option>\r\n                         <option> A+ </option>\r\n                         <option> A- </option>\r\n                         <option> B+ </option>\r\n                         <option> B- </option>\r\n                         <option> AB+ </option>\r\n                         <option> AB- </option>\r\n                         <option> O+ </option>\r\n                         <option> O- </option>\r\n                     </select>\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                     <label> weight </label>\r\n                     <input type=\"number\" name=\"weight\" value={this.state.weight} autoComplete=\"off\" required  class=\"form-control\" placeholder=\"Enter Weight\" onChange={ this.handlechange} />\r\n                     \r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                     <label> Address </label>\r\n                     <input type=\"text\" name=\"area\" value={this.state.area} class=\"form-control\" placeholder=\"Enter Area\" autoComplete=\"off\" required  onChange={ this.handlechange} />\r\n                 </div>\r\n                 <div class=\"form-group\">\r\n                     <label> Mobile no </label>\r\n                     <input type=\"number\" name=\"mobileno\" value={this.state.mobileno} class=\"form-control\" placeholder=\"Mobile number\" autoComplete=\"off\" required  onChange={ this.handlechange} />\r\n                 </div> \r\n                 <div class=\"form-group\"> \r\n                     <label> Select question </label> \r\n                     <select class=\"form-control\" name=\"selectquestion\" value={this.state.selectquestion} autoComplete=\"off\" required  onChange={ this.handlechange} >\r\n                         <option  selected > Select question </option> \r\n                         <option> What is your favourite digits.... </option> \r\n                         <option> What is your friend name... </option> \r\n                         <option> What is your favourite book name... </option> \r\n                     </select>\r\n                 </div> \r\n                 <div class=\"form-group\">\r\n                     <label> Answer the question  </label>\r\n                     <input type=\"text\" name=\"answer\" value={this.state.answer} class=\"form-control\" placeholder=\"Answer the question for any change after register.... \" autoComplete=\"off\" required  onChange={ this.handlechange} />\r\n                 </div>\r\n                 <div>\r\n                     <input class=\"btn btn-success btn btn-lg\" id=\"submitt\" type=\"submit\"  onClick={this.handlesubmit} />\r\n                 </div>\r\n           </div>\r\n        )\r\n    }\r\n  \r\n}\r\n\r\nexport default  Register  ;","import React from 'react'\r\nimport './searchdonar.css' \r\nconst url = \"https://blood-donr.herokuapp.com/group\"\r\nconst rurl = \"https://blood-donr.herokuapp.com/register\"\r\nclass Searchdonar extends React.Component {\r\n        constructor(){\r\n            super()\r\n\r\n                this.state = {\r\n                    bloodtype: '' ,\r\n                    donar: ''\r\n                }\r\n        }\r\n            \r\n        rendergroup=(data) => {\r\n                if(data){\r\n                    return data.map((item) => {\r\n                        console.log(item.Blood_Group)\r\n                        return(\r\n                            <option value= {item.Blood_Group}>{item.Blood_Group} </option>\r\n                        )\r\n                    })\r\n                }else{\r\n                    <span> connection Fail </span>\r\n                }\r\n         }\r\n\r\n         handlesearch = (event) =>{\r\n            fetch(`${rurl}/${event.target.value}`,{method:'GET'})\r\n            .then((res)=> res.json())\r\n            .then((data) => { \r\n                // console.log(data) \r\n                this.setState({donar:data})\r\n            })\r\n         }\r\n\r\n        smile = (data) => {\r\n            // if(data.length<=0){\r\n            //     return(\r\n            //        <tr> <td colSpan=\"5\"> <h3> Donar not available  </h3> </td>  </tr>\r\n            //     )\r\n            // }else {\r\n                if(data){\r\n                    return data.map((item) => {\r\n                        return(\r\n                            <tr>\r\n                                {/* <td> {item.name} </td> */}\r\n                                <td> {item.DOB} </td>\r\n                                <td> {item.bloodgroup} </td>\r\n                                {/* <td> {item.weight} </td> */}\r\n                                <td> {item.area} </td>\r\n                                <td> {item.mobileno} </td>\r\n                            </tr>\r\n                           \r\n                        )\r\n                    })\r\n                }\r\n            // }\r\n         }\r\n           \r\n    render(){\r\n        \r\n        // console.log(this.state.bloodtype)\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 id=\"contacttext\">   Select your require blood type and connect to an available donar  </h2> \r\n                <div className=\"jumbotron\">\r\n                    <select  className =\"optionstyle\" onChange={this.handlesearch}>\r\n                        <option value=\"\"  selected disabled > Select Blood Group which you require </option>\r\n                        {this.rendergroup(this.state.bloodtype)}\r\n                    </select> \r\n                </div> \r\n                <div className=\"panel panel-success \">\r\n                    <div className=\"panel-heading\">Blood Donors List</div>\r\n                    <div className=\"panel-body\">\r\n                    <table className=\"table table-responsive\" id=\"tabledessign\">\r\n                        <thead>\r\n                            <tr>\r\n                            {/* <th> OrderId </th> */}\r\n                            {/* <th> Name </th> */}\r\n                            <th> DOB </th>\r\n                            <th> Bloodgroup </th>\r\n                            {/* <th> Weight </th> */}\r\n                            <th> Area </th>\r\n                            <th> Mobileno </th>\r\n                            </tr>\r\n                            {this.smile(this.state.donar)}\r\n                        </thead>\r\n                        <tbody>\r\n                             \r\n                        </tbody>\r\n                    </table>\r\n                    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } \r\n    componentDidMount(){\r\n        alert(\"Before using this site register in it so that you can also donate your blood and make someone's face smile.) \")\r\n        fetch( url ,{method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({bloodtype:data}))\r\n    }\r\n   \r\n}\r\n\r\nexport default  Searchdonar  ;","import React from 'react';\r\nimport './Header.css' \r\nconst url = \"https://blood-donr.herokuapp.com/register\"\r\n\r\nclass Header extends React.Component{\r\n    constructor(){\r\n        super() \r\n         this.state = {\r\n             donars:'' \r\n         }\r\n    } \r\n    Activedonar=(data) => {\r\n        if(data){\r\n            const add = data.length\r\n            return(\r\n                <>\r\n                 {data.length} \r\n                \r\n                </>\r\n\r\n            )\r\n           \r\n        }else{\r\n            <span> connection Fail </span>\r\n        }\r\n } \r\n    render(){\r\n        return(  \r\n            <React.Fragment>\r\n            <header id=\"headd\">\r\n                <div className=\"row\" id=\"rowdesign\"> \r\n                    <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\"> \r\n                        <p id=\"edit\"> Donate Blood And Be The Reason Of Smile To Many Faces..... </p>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\r\n                        <img id=\"image2\" src=\"./image/cc.png\" width=\"10%\" alt=\"icon\"/>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\r\n                        <p className=\"active\"> Active Donars <br/>  <p id=\"donars\" > {this.Activedonar(this.state.donars)}  </p> </p>\r\n                    </div>\r\n                </div> \r\n            </header> \r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch( url ,{method:'GET'}) \r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({donars:data}))\r\n    }\r\n\r\n}\r\nexport default Header  \r\n","import React from 'react';\r\nimport './Footer.css' ;\r\nconst Footer = ()=>{\r\n    return(\r\n       <footer>\r\n           <p className=\"foot\" id=\"footmood\">  This Site Create & Design By Ruchika Agarwal Reserved All Copyrights © 2021 :) </p>\r\n       </footer>\r\n    )\r\n}\r\nexport default Footer ","import React from 'react'\r\nimport './Nav.css'\r\n\r\nclass Change extends React.Component{\r\n    mode=()=>{\r\n        document.body.classList.toggle('dark'); \r\n        document.getElementById(\"footmood\").classList.toggle('darkfootr'); \r\n        // document.getElementById(\"form\").classList.toggle('postbackground'); \r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"idforchngmood\">\r\n            <button onClick={this.mode}><span class=\"glyphicon glyphicon-adjust\"></span></button>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n \r\n\r\nexport default Change ","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Change from './change'\r\nconst Navbar =() => {\r\n    return(\r\n        <React.Fragment>\r\n           <nav className=\"navbar navbar-inverse\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\"> \r\n                    <span className=\"icon-bar\"></span>\r\n                    <span className=\"icon-bar\"></span> \r\n                    <span className=\"icon-bar\"></span>                        \r\n                </button> \r\n                <Link to=\"/\" className=\"navbar-brand\">Blood Donate</Link>\r\n                </div> \r\n                <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                <ul className=\"nav navbar-nav\">\r\n                   <li> <Link to=\"/\">HOME</Link></li> \r\n                    <li> <Link to=\"/ELIGIBILITY\">ELIGIBILITY</Link></li> \r\n                    <li> <Link to=\"/Compability\"> COMPABILITY</Link></li>\r\n                    <li><Link to=\"/Bloodfacts\"> BLOOD FACTS</Link></li>\r\n                    <li><Link to=\"/Donarregister\"> DONAR REGISTER</Link></li>\r\n                    <li><Link to=\"/Searchdonar\"> SEARCH DONAR</Link></li>\r\n                    <li><Link to=\"/bookinglist\"> DONAR LIST </Link></li>\r\n                    <li><Link to=\"/Bloodrequired\"> BLOOD REQUIRED </Link></li> \r\n                    <li> <Change/> </li> \r\n                </ul>\r\n                </div> \r\n            </div>\r\n            </nav>\r\n        </React.Fragment>\r\n    )\r\n} \r\n\r\nexport default Navbar;","import React from 'react' \r\nimport './Post.css'\r\n\r\nconst url = \"https://blood-donr.herokuapp.com/require\"\r\n\r\nclass Postdisply extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n                    \r\n                    this.state = {\r\n                        bloodgroup:'',\r\n                        units:'',\r\n                        reason:'',\r\n                        requirementbefore:'',\r\n                        hospitalname:'',\r\n                        patientname:'',\r\n                        patientage:'',\r\n                        mobileno:''\r\n                    }\r\n    }\r\n\r\n    handlesubmit=()=>{ \r\n        if(this.state.bloodgroup==''||this.state.units ==''||this.state.reason ==''||this.state.requirementbefore ==''||this.state.hospitalname ==''||this.state.patientname ==''||this.state.patientage ==''||this.state.mobileno ==''){\r\n            alert(\"All filds are required\")\r\n        } else{ \r\n            if(this.state.mobileno.length==10){\r\n                fetch( url,\r\n                    {\r\n                        method:'POST',\r\n                        headers:{\r\n                            'Accept':'application/json',\r\n                            'Content-Type':'application/json'\r\n                        },\r\n                        body:JSON.stringify(this.state)\r\n                    })\r\n                    .then(this.props.history.push('/Bloodrequired'))\r\n            } else{\r\n                alert(\"Enter right phone no\")\r\n            }\r\n        \r\n        }\r\n    }\r\n\r\n    handlereset = () => {\r\n        this.setState({mobileno:''})\r\n        this.setState({patientage:''})\r\n        this.setState({patientname:''})\r\n        this.setState({hospitalname:''})\r\n        this.setState({requirementbefore:''})\r\n        this.setState({reason:''})\r\n        this.setState({units:''})\r\n        this.setState({bloodgroup:''})\r\n    }\r\n\r\n    handlechange=(event)=>{\r\n        this.setState({[event.target.name]:event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                 <form>\r\n                <div class=\"container\"  id=\"form\" className=\"row\">\r\n                    <h2> <center> Post Your Requirement </center> </h2>\r\n                    <div className=\"col-md-4 col-sm-4 col-xs-4\" id=\"form1\">        \r\n                        <div class=\"form-group\">\r\n                            <label> Blood Group </label>\r\n                            <select class=\"form-control\" autoComplete=\"off\" name=\"bloodgroup\" value={this.state.bloodgroup} onChange={ this.handlechange}>\r\n                                <option  selected  > select blood group </option>\r\n                                <option> A+ </option>\r\n                                <option> A- </option>\r\n                                <option> B+ </option>\r\n                                <option> B- </option>\r\n                                <option> AB+ </option>\r\n                                <option> AB- </option>\r\n                                <option> O+ </option>\r\n                                <option> O- </option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label> No of Units </label>\r\n                            <input type=\"number\" autoComplete=\"off\" class=\"form-control\"  name=\"units\" value={this.state.units}  placeholder=\"No of unit require blood\" onChange={ this.handlechange} />\r\n                        </div> \r\n                        <div class=\"form-group\">\r\n                            <label> Reason for Requirement </label>\r\n                            <input type=\"text\" autoComplete=\"off\" class=\"form-control\"  name=\"reason\" value={this.state.reason}  placeholder=\"Reason for Requirement\" onChange={ this.handlechange} />\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label> Required Before </label>\r\n                            <input type=\"date\" autoComplete=\"off\" class=\"form-control\"  name=\"requirementbefore\" value={this.state.requirementbefore}  placeholder=\"Required Before\" onChange={ this.handlechange} />\r\n                        </div> \r\n                        <div class=\"form-group\">\r\n                            <label> Hospital Name </label>\r\n                            <input type=\"text\" autoComplete=\"off\" class=\"form-control\" name=\"hospitalname\" value={this.state.hospitalname}  placeholder=\" Hospital Name\" onChange={ this.handlechange} />\r\n                        </div>     \r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-4 col-xs-4\" id=\"form2\" >\r\n                    <div class=\"form-group\">\r\n                        <label> Patient Name </label>\r\n                        <input type=\"text\" autoComplete=\"off\" name=\"patientname\" value={this.state.patientname}  placeholder=\"Patient Name\"  class=\"form-control\" onChange={ this.handlechange}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label> Patient Age </label>\r\n                        <input type=\"number\" autoComplete=\"off\" class=\"form-control\" name=\"patientage\"  value={this.state.patientage}  placeholder=\"Patient age\" onChange={ this.handlechange} />\r\n                    </div> \r\n                    <div class=\"form-group\">\r\n                        <label> Mobile no </label>\r\n                        <input type=\"number\" autoComplete=\"off\" class=\"form-control\" name=\"mobileno\" value={this.state.mobileno}   placeholder=\"Mobile number\" onChange={ this.handlechange} />\r\n                    </div>\r\n                </div> \r\n                    <br/>\r\n                </div>  \r\n                <div id=\"set\"> \r\n                    <input id=\"submmit\" type=\"button\" value=\"Submit\" onClick={this.handlesubmit} />\r\n                    <input id=\"Restart\" type=\"reset\" value=\"Reset\" onClick={this.handlereset} />\r\n                </div> \r\n                \r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Postdisply","import React from 'react' ;\r\nimport {Link} from 'react-router-dom';\r\nimport './donarlist.css' \r\nconst Donarlist = (props) =>{\r\n    const Booking = ({Listing}) =>{\r\n        if(Listing){  \r\n            if(Listing.length>0){\r\n                return Listing.map((item) => {\r\n                    return(\r\n                        <tr>\r\n                        <td> {item.name} </td>\r\n                        <td> {item.DOB} </td>\r\n                        <td> {item.bloodgroup} </td>\r\n                        <td> {item.weight} </td>\r\n                        <td> {item.area} </td>\r\n                        <Link to={`del/${item._id}`}> <td> <input type=\"button\" id=\"deletedonar\"  value=\"Delete\"/> </td>  </Link> \r\n                    </tr>\r\n                    )\r\n                })\r\n            }\r\n            else{\r\n                return(\r\n                    <tr> <td colSpan=\"6\"> <h3> Donar Not Available </h3> </td>  </tr>\r\n                )\r\n            }\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    <img src=\"/image/loader.gif\"/>\r\n                </div>\r\n            )\r\n        } \r\n    } \r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container\" id=\"tabledesign\">\r\n                        <h3>   Donar  List   </h3>\r\n                        <table className=\"table  table-bordered table-hover\" id=\"donartable\">\r\n                            <thead>\r\n                                <tr  class=\"bg-warning\">\r\n                                {/* <th> OrderId </th> */}\r\n                                <th> Name </th>\r\n                                {/* <th> Gender </th> */}\r\n                                <th> DOB </th>\r\n                                <th> Bloodgroup </th>\r\n                                <th> Weight </th>\r\n                                <th> Address </th>\r\n                                {/* <th> Mobileno </th> */}\r\n                                <th> Delete Donar </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Booking(props)} \r\n                            </tbody>\r\n                        </table>\r\n                 </div>        \r\n            </React.Fragment>\r\n        )\r\n    \r\n    }\r\n\r\nexport default Donarlist\r\n\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport './donarlist.css'\r\n\r\nconst url = \"https://blood-donr.herokuapp.com/register\"\r\n\r\nclass Donarfilter extends React.Component {\r\n    constructor(props){\r\n        super(props) \r\n    } \r\n     Groupfilter = (event) => {\r\n      \r\n        let grpUrl \r\n        if(event.target.value==''){\r\n            grpUrl= `${url}`\r\n        }else{  \r\n            grpUrl = `${url}/${event.target.value}`\r\n        } \r\n        \r\n        axios.get(grpUrl)\r\n        .then((response) => {this.props.Filterdonars(response.data)\r\n           \r\n        })\r\n       \r\n     }        \r\n\r\n    render(){    \r\n        return(\r\n            <div className=\"groupfilter\" onChange={this.Groupfilter} >\r\n                <h2 id=\"bloodfilterheading\" > Blood Group </h2>  \r\n                <p id=\"bloodfiltertext\" > Filter Donars on the basis of bloodgroup </p>\r\n                <label> <input type=\"radio\" value=\"\" name=\"group\"/> \r\n                    All \r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"A+\" name=\"group\"/> \r\n                    A+\r\n                </label><br/>\r\n                <label>  <input type=\"radio\" value=\"A-\" name=\"group\"/> \r\n                    A-\r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"B+\" name=\"group\"/>\r\n                    B+\r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"B-\" name=\"group\"/>\r\n                    B- \r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"AB+\" name=\"group\"/> \r\n                    AB+\r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"AB-\" name=\"group\"/> \r\n                    AB-\r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"O+\" name=\"group\"/> \r\n                    O+\r\n                </label> <br/>\r\n                <label> <input type=\"radio\" value=\"O-\" name=\"group\"/> \r\n                    O-\r\n                </label>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Donarfilter","import React from 'react'\r\nimport Donarlist from './donarlist'\r\nimport './donarlist.css'\r\nimport Donarfilter from './donarfilter'\r\nconst url = \"https://blood-donr.herokuapp.com/register\"\r\n\r\nclass Donarapi extends React.Component{\r\n    constructor(){\r\n        super()\r\n        \r\n            this.state = {\r\n                list : ''\r\n            }\r\n    } \r\n    setDataPerFilter=(sortedData)=>{       \r\n        this.setState({list:sortedData})\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                    <Donarfilter Filterdonars={(data) => {this.setDataPerFilter(data)}} />\r\n                    <Donarlist Listing = {this.state.list} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch( url ,{method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({list:data}))\r\n    }\r\n}\r\n\r\nexport default Donarapi\r\n","import React from 'react' \r\nimport './postregister.css'\r\n\r\nconst url = \"https://blood-donr.herokuapp.com/delete\"\r\n\r\nconst Postrequire = (props) => {\r\n    const Booking = ({Listing}) =>{ \r\n        if(Listing){\r\n        if(Listing.length>0){\r\n            return Listing.map((item) => {\r\n                var dateObj = new Date();\r\n                var currentDate = dateObj.getDate();\r\n                var currentYear = dateObj.getFullYear();\r\n                var currentMonth = dateObj.getMonth();\r\n                currentMonth++ ;\r\n                var beforeDate = item.requirementbefore.split('-')\r\n                var beforeYear = Number(beforeDate[0]);\r\n                var beforeMonth = Number(beforeDate[1]);\r\n                var beforeDate = Number(beforeDate[2]);\r\n                if (currentYear >= beforeYear){   \r\n                if(currentMonth >= beforeMonth){ \r\n                    if(currentMonth > beforeMonth){\r\n                            fetch(`${url}/${item._id}`,\r\n                                { \r\n                                    method:'DELETE',\r\n                                    headers:{\r\n                                        'Accept':'application/json',\r\n                                        'Content-Type':'application/json'\r\n                                    }\r\n                                })   \r\n                    } \r\n                    else{ \r\n                            if(currentDate>=beforeDate){\r\n                                fetch(`${url}/${item._id}`,\r\n                                { \r\n                                    method:'DELETE',\r\n                                    headers:{\r\n                                        'Accept':'application/json',\r\n                                        'Content-Type':'application/json'\r\n                                    }\r\n                                })\r\n                            }\r\n                    }\r\n                    \r\n                    }     \r\n                //month cndition end///\r\n                } \r\n                //year condition close//\r\n                return(\r\n                    <tr>\r\n                    <td> {item.bloodgroup} </td>\r\n                    <td> {item.units} </td>\r\n                    <td> {item.reason} </td>\r\n                    <td> {item.requirementbefore} </td>\r\n                    <td> {item.hospitalname} </td>\r\n                    <td> {item.patientname} </td>\r\n                    <td> {item.patientage} </td>\r\n                    <td> {item. mobileno} </td>\r\n                </tr>\r\n                )\r\n            })\r\n        } \r\n        else{\r\n            return(\r\n                <tr> <td colSpan=\"8\"> <h3> No Requirement </h3> </td>  </tr>\r\n            )\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <img src=\"/image/loader.gif\"/>\r\n            </div>\r\n        )\r\n    }\r\n}  \r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <h2> <center> FOLLOWING BLOOD REQUIRED</center>  </h2>\r\n                        <table className=\"table table-bordered table-hover\" id=\"donarrtable\">\r\n                            <thead class=\"bg-warning\">\r\n                                <tr >\r\n                                <th> Blood Group </th>\r\n                                <th> No of Units </th>\r\n                                <th> Reason for Requirement </th>\r\n                                <th> Required Before </th>\r\n                                <th> Hospital Name </th>\r\n                                <th> Patient Name </th>\r\n                                <th> Patient Age</th>\r\n                                <th> Mobileno </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {Booking(props)} \r\n                            </tbody>\r\n                        </table> \r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Postrequire","import React from 'react'\r\nimport Postrequire from './postregisterlist'\r\nconst url = \"https://blood-donr.herokuapp.com/post\"\r\n\r\nclass Requireapi extends React.Component{\r\n    constructor(){\r\n        super()\r\n        \r\n            this.state = {\r\n                Requirementlist : ''\r\n            }\r\n    }\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                    <Postrequire Listing = {this.state.Requirementlist} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch( url ,{method:'GET'})\r\n        .then((res) => res.json())\r\n        .then((data) => this.setState({Requirementlist:data}))\r\n    }\r\n}\r\n\r\nexport default Requireapi\r\n","import React from 'react'\r\nimport './delete.css'\r\n\r\nconst url = \"https://blood-donr.herokuapp.com/deleteregister\"\r\n class Deldonar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n         \r\n            this.state={\r\n                _id : props.match.params.id,\r\n                question: '',\r\n                answer: ''\r\n            }\r\n    } \r\n\r\n    handledonar =(event) => {\r\n        this.setState({[event.target.name]:event.target.value})\r\n    }\r\n    handleclick = () => {\r\n        fetch(`${url}`,\r\n            { \r\n                method:'DELETE',\r\n                headers:{\r\n                    'Accept':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify(this.state)\r\n            }) \r\n            alert(\"If you enter right information then your registration is successfully \")\r\n            this.props.history.push('/bookinglist')\r\n            // .then((res) => { \r\n            //      return res.json()\r\n            // }) \r\n            // .then((data) => { \r\n            //     console.log(data)\r\n            //     this.props.history.push('/bookinglist')\r\n            // }) \r\n        }\r\n    render(){ \r\n        return(\r\n            <div className=\"container\" id=\"delpage\">\r\n                <p id=\"deltext\"> If you want to cancel your registration, then select the question and answer that you had done at the time of registration to find out that you are the same donar.... </p>\r\n                 <div class=\"form-group\"> \r\n                     <label> Select question </label> \r\n                     <select class=\"form-control\" name=\"question\" onChange={this.handledonar} autoComplete=\"off\" required  >\r\n                         <option  selected > Select question </option> \r\n                         <option value=\"What is your favourite digits....\"> What is your favourite  digits.... </option> \r\n                         <option value=\"What is your friend name...\"> What is your friend name... </option> \r\n                         <option value=\"What is your favourite book name...\"> What is your favourite book name... </option> \r\n                     </select>\r\n                 </div> \r\n                 <div class=\"form-group\">\r\n                     <label> Answer the question  </label>\r\n                     <input type=\"text\" name=\"answer\"  onChange={this.handledonar}  class=\"form-control\" placeholder=\"Answer the question for any change after register.... \" autoComplete=\"off\" required />\r\n                 </div>\r\n                 <div>\r\n                     <input class=\"btn btn-danger btn btn-lg\"  id=\"deldon\" onClick={this.handleclick} type=\"button\" value=\"Delete\"/>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n }\r\n\r\n\r\n\r\n export default Deldonar","import React from 'react'\r\nimport {BrowserRouter,Route} from 'react-router-dom' \r\nimport Home from './Home'\r\nimport Eligibility from './eligibility' ;\r\nimport Comp  from './compability'\r\nimport Blood  from './Bloodfacts'\r\nimport Register  from './donarregister'\r\nimport Searchdonar  from './searchdonar'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport Navbar from './Nav'\r\nimport Postdisply from './Post'\r\nimport Donarapi from './donarapi'\r\nimport Requireapi from './postregisterlistapi'\r\nimport Deldonar from './delete'\r\nconst Routing = () => {\r\n    return(\r\n       \r\n            <BrowserRouter>\r\n             <div>\r\n                <Navbar/>\r\n                <Header/> \r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/Home' component={Home}/>\r\n                <Route  path='/Home/:id' component={Postdisply}/>\r\n                <Route  path ='/ELIGIBILITY' component={Eligibility}/>\r\n                <Route  path ='/Compability' component={Comp}/> \r\n                <Route  path ='/Bloodfacts' component={Blood}/>\r\n                <Route  path ='/Donarregister' component={Register}/>\r\n                <Route  path ='/Searchdonar' component={Searchdonar}/> \r\n                <Route  path ='/bookinglist' component={Donarapi}/> \r\n                <Route  path ='/Bloodrequired' component={Requireapi}/> \r\n                <Route  path ='/del/:id' component={Deldonar}/> \r\n                <Footer/>\r\n            </div>\r\n            </BrowserRouter>\r\n        \r\n    )\r\n}\r\n\r\nexport default Routing","import React from 'react' ;\r\nimport Reactdom from 'react-dom' \r\nimport Routing from './Component/Routing'\r\n\r\n\r\n\r\nReactdom.render(<Routing/>,document.getElementById('root'))\r\n"],"sourceRoot":""}